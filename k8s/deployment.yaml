# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: st-josephs-demo
#   namespace: st-josephs-demo
#   labels:
#     app: st-josephs-demo
# spec:
#   replicas: 3
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 1
#       maxSurge: 1
#   selector:
#     matchLabels:
#       app: st-josephs-demo
#   template:
#     metadata:
#       labels:
#         app: st-josephs-demo
#     spec:
#       containers:
#       - name: app
#         image: nixndme/st-josephs-demo:v1.0.21
#         ports:
#         - containerPort: 5000
#         env:
#         - name: APP_VERSION
#           value: "v1.0.12"
#         resources:
#           requests:
#             memory: "64Mi"
#             cpu: "50m"
#           limits:
#             memory: "128Mi"
#             cpu: "100m"
#         livenessProbe:
#           httpGet:
#             path: /health
#             port: 5000
#           initialDelaySeconds: 30
#           periodSeconds: 10
#         readinessProbe:
#           httpGet:
#             path: /health
#             port: 5000
#           initialDelaySeconds: 5
#           periodSeconds: 5

###

apiVersion: apps/v1
kind: Deployment
metadata:
  name: st-josephs-demo
  namespace: st-josephs-demo
  labels:
    app: st-josephs-demo
    version: v1.0.21
spec:
  replicas: 4 # Start with 4 replicas for demo load
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: st-josephs-demo
  template:
    metadata:
      labels:
        app: st-josephs-demo
        version: v1.0.21
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: nixndme/st-josephs-demo:v1.0.21
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        env:
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: APP_VERSION
        - name: DEMO_MODE
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: DEMO_MODE
        - name: GEOLOCATION_ENABLED
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: GEOLOCATION_ENABLED
        - name: GEOLOCATION_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: GEOLOCATION_TIMEOUT
        - name: MAX_WORKERS
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: MAX_WORKERS
        - name: RATE_LIMIT_ENABLED
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: RATE_LIMIT_ENABLED
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: LOG_LEVEL
        - name: ENHANCED_TRACKING
          valueFrom:
            configMapKeyRef:
              name: st-josephs-demo-config
              key: ENHANCED_TRACKING
        # Pod information for demo
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi" # Increased for thousands of users
            cpu: "500m" # Increased for demo load
        # Startup probe - gives app time to initialize
        startupProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12 # 60 seconds total startup time
        # Liveness probe - restart if unhealthy
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20 # Less frequent for stability
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        # Readiness probe - remove from load balancer if not ready
        readinessProbe:
          httpGet:
            path: /readiness
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false # Flask needs to write temp files
          capabilities:
            drop:
            - ALL
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: st-josephs-demo-pdb
  namespace: st-josephs-demo
  labels:
    app: st-josephs-demo
spec:
  minAvailable: 2 # Always keep at least 2 pods running
  selector:
    matchLabels:
      app: st-josephs-demo
